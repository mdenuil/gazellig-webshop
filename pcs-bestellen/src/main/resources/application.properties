# DB Config (H2)
spring.h2.console.enabled=true
spring.h2.console.path=/h2
spring.datasource.url=jdbc:${DATASOURCE_URL:h2:mem:}/${DATASOURCE_NAME:testdbpcsbestellen}
spring.datasource.username=${DATASOURCE_USERNAME:sa}
spring.datasource.password=${DATASOURCE_PASSWORD:}

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Send Event topics
# Bestelling
rabbitmq.topics.BestellingAfgerond=Kantilever.BestellenService.BestellingAfgerondEvent
rabbitmq.topics.BestellingAanBestellenToegevoegd=Kantilever.BestellenService.BestellingAanBestellenToegevoegdEvent
rabbitmq.topics.BestellingKlaarVoorVerwerken=Kantilever.BestellenService.BestellingKlaarVoorVerwerkenEvent
# Bestelling Status
rabbitmq.topics.BestellingStatusInAfwachting=Kantilever.BestellenService.BestellingStatusInAfwachtingGezetEvent
rabbitmq.topics.BestellingStatusBehandelbaar=Kantilever.BestellenService.BestellingStatusBehandelbaarGezetEvent
rabbitmq.topics.BestellingStatusInBehandeling=Kantilever.BestellenService.BestellingStatusInBehandelingGezetEvent
rabbitmq.topics.BestellingStatusVerstuurd=Kantilever.BestellenService.BestellingStatusVerstuurdGezetEvent
rabbitmq.topics.BestellingStatusBetaald=Kantilever.BestellenService.BestellingStatusBetaaldGezetEvent

# Receive Event Topics
# Bestelling
rabbitmq.topics.BestellingGeplaatstEvent=Kantilever.BffWebwinkel.BestellingGeplaatstEvent
# Bestelling Status
rabbitmq.topics.BestellingInAfwachting=Kantilever.BestellenService.BestellingInAfwachtingEvent
rabbitmq.topics.BestellingBehandelbaar=Kantilever.BestellenService.BestellingBehandelbaarEvent
rabbitmq.topics.BestellingInBehandeling=Kantilever.BestellenService.BestellingInBehandelingEvent
rabbitmq.topics.BestellingVerstuurd=Kantilever.BestellenService.BestellingVerstuurdEvent
rabbitmq.topics.BestellingBetaald=Kantilever.BestellenService.BestellingBetaaldEvent
# Artikel
rabbitmq.topics.ArtikelAanCatalogusToegevoegd=Kantilever.CatalogusService.ArtikelAanCatalogusToegevoegd
# Voorraad
rabbitmq.topics.VoorraadVerhoogd=Kantilever.MagazijnService.VoorraadVerhoogdEvent
rabbitmq.topics.VoorraadVerlaagd=Kantilever.MagazijnService.VoorraadVerlaagdEvent

rabbitmq.event.exchange=${EVENT_EXCHANGE:Kantilever.Eventbus}

# RabbitMQ Config
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:Kantilever}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:Kant1lever}

# Auditlog
auditlog.url=${AUDITLOG_URL:http://localhost}
auditlog.port=${AUDITLOG_PORT:2022}
auditlog.replay.exchange=${REPLAY_EXCHANGE:Kantilever.Replay.Bestellen}
auditlog.replay.queue=kantilever.replay.queue

# Magazijn Service
magazijnservice.url=${MAGAZIJNSERVICE_URL:http://localhost}
magazijnservice.port=${MAGAZIJNSERVICE_PORT:2021}
magazijnservice.endpointVerhoogVoorraad=${MAGAZIJNSERVICE_ENDPOINT:PlaatsVoorraadInMagazijn}
magazijnservice.endpointVerlaagVoorraad=${MAGAZIJNSERVICE_ENDPOINT:HaalVoorraadUitMagazijn}

rabbitmq.queue.identifier=toPcsBestellen
